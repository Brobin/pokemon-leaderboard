# Generated by Django 2.1.5 on 2019-01-18 18:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Trainer Name')),
                ('team', models.IntegerField(choices=[(1, 'Mystic'), (2, 'Valor'), (3, 'Instinct')])),
                ('xp', models.BigIntegerField(verbose_name='Total XP')),
                ('kanto', models.IntegerField(help_text='Kanto Pokedex Entries', verbose_name='Kanto')),
                ('johto', models.IntegerField(help_text='Johto Pokedex Entries', verbose_name='Johto')),
                ('hoenn', models.IntegerField(help_text='Hoenn Pokedex Entries', verbose_name='Hoenn')),
                ('sinnoh', models.IntegerField(help_text='Sinnoh Pokedex Entries', verbose_name='Sinnoh')),
                ('great_veteran', models.IntegerField(verbose_name='Great League Veteran')),
                ('ultra_veteran', models.IntegerField(verbose_name='Ultra League Veteran')),
                ('master_veteran', models.IntegerField(verbose_name='Master League Veteran')),
                ('jogger', models.IntegerField(help_text='Kilometers Walked', verbose_name='Jogger')),
                ('collector', models.IntegerField(help_text='Pokemon Caught', verbose_name='Collector')),
                ('breeder', models.IntegerField(help_text='Eggs Hatched', verbose_name='Breeder')),
                ('scientist', models.IntegerField(blank=True, help_text='Pokemon Evolved', null=True, verbose_name='Scientist')),
                ('backpacker', models.IntegerField(blank=True, help_text='Pokestops Spun', null=True, verbose_name='Backpacker')),
                ('battle_girl', models.IntegerField(blank=True, help_text='Battles Won', null=True, verbose_name='Battle Girl')),
                ('youngster', models.IntegerField(blank=True, help_text='Tiny Ratatta', null=True, verbose_name='Youngster')),
                ('pikachu_fan', models.IntegerField(blank=True, help_text='Pikachu Caught', null=True, verbose_name='Pikachu Fan')),
                ('berry_master', models.IntegerField(blank=True, help_text='Berries Fed', null=True, verbose_name='Berry Master')),
                ('gym_leader', models.IntegerField(blank=True, help_text='Hours Defended', null=True, verbose_name='Gym Leader')),
                ('pokemon_ranger', models.IntegerField(blank=True, help_text='Field Research Tasks', null=True, verbose_name='Pokemon Ranger')),
                ('idol', models.IntegerField(blank=True, help_text='Best Friends', null=True, verbose_name='Idol')),
                ('gentleman', models.IntegerField(blank=True, help_text='Pokemon Traded', null=True, verbose_name='Gentleman')),
                ('pilot', models.IntegerField(blank=True, help_text='Trade Distance', null=True, verbose_name='Pilot')),
                ('fisherman', models.IntegerField(blank=True, help_text='Big Magikarp', null=True, verbose_name='Fisherman')),
                ('ace_trainer', models.IntegerField(blank=True, help_text='Ace Trainer', null=True, verbose_name='Ace Trainer')),
                ('unown', models.IntegerField(blank=True, help_text='Unown', null=True, verbose_name='Unown')),
                ('champion', models.IntegerField(blank=True, help_text='Raids', null=True, verbose_name='Champion')),
                ('battle_legend', models.IntegerField(blank=True, help_text='Legendary Raids', null=True, verbose_name='Battle Legend')),
                ('schoolkid', models.IntegerField(blank=True, help_text='Normal Type', null=True, verbose_name='Schoolkid')),
                ('black_belt', models.IntegerField(blank=True, help_text='Fighting Type', null=True, verbose_name='Black Belt')),
                ('bird_keepr', models.IntegerField(blank=True, help_text='Flying Type', null=True, verbose_name='Bird Keepr')),
                ('punk_girl', models.IntegerField(blank=True, help_text='Poison Type', null=True, verbose_name='Punk Girl')),
                ('ruin_maniac', models.IntegerField(blank=True, help_text='Ground Type', null=True, verbose_name='Ruin Maniac')),
                ('hiker', models.IntegerField(blank=True, help_text='Rock Type', null=True, verbose_name='Hiker')),
                ('bug_catcher', models.IntegerField(blank=True, help_text='Bug Type', null=True, verbose_name='Bug Catcher')),
                ('hex_maniac', models.IntegerField(blank=True, help_text='Ghost Type', null=True, verbose_name='Hex Maniac')),
                ('depot_agent', models.IntegerField(blank=True, help_text='Steel Type', null=True, verbose_name='Depot Agent')),
                ('kindler', models.IntegerField(blank=True, help_text='Fire Type', null=True, verbose_name='Kindler')),
                ('swimmer', models.IntegerField(blank=True, help_text='Water Type', null=True, verbose_name='Swimmer')),
                ('gardener', models.IntegerField(blank=True, help_text='Grass Type', null=True, verbose_name='Gardener')),
                ('rocker', models.IntegerField(blank=True, help_text='Electric Type', null=True, verbose_name='Rocker')),
                ('psychic', models.IntegerField(blank=True, help_text='Psychic Type', null=True, verbose_name='Psychic')),
                ('skier', models.IntegerField(blank=True, help_text='Ice Type', null=True, verbose_name='Skier')),
                ('dragon_tamer', models.IntegerField(blank=True, help_text='Dragon Type', null=True, verbose_name='Dragon Tamer')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trainer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
